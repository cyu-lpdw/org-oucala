version: "3"

services:

  # Database.
  db:
    image: mongo:6.0.3
    networks: [traefik-net]
    volumes:
      - .data/db/data:/db/data:rw

  # API server (backend).
  api:
    image: deepnox/oucala-api
    networks: [traefik-net]
    depends_on: [ "db" ]
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:rw"
    deploy:
      labels:
        traefik.docker.network: "traefik-net"
        traefik.enable: "true"
        traefik.http.routers.oucala-api.entrypoints: "https"
        traefik.http.routers.oucala-api.rule: "Host(`api.${APP_ENV}.oucala.org`)"
        #traefik.http.routers.oucala-api.service: "api@internal"
        traefik.http.routers.oucala-api.tls.certresolver: "letsEncrypt"
        traefik.http.routers.oucala-api.tls.options: "modern@file"
        traefik.http.routers.oucala-api.tls: "true"
        traefik.http.services.oucala-api.loadbalancer.server.port: 8080 
        traefik.http.services.oucala-api.loadbalancer.sticky.cookie.httpOnly: "true"
        traefik.http.services.oucala-api.loadbalancer.sticky.cookie.secure: "true"
    #command: [ "wait" ]

  # Frontend application.
  web:
    image: deepnox/oucala-app
    networks: [traefik-net]
    depends_on: [ "api" ]
    volumes:
    #  - ./src/app/packages/@WorldCitiesService/web:/app/packages/@WorldCitiesService/web:rw
    deploy:
      labels:
        traefik.docker.network: "traefik-net"
        traefik.enable: "true"
        traefik.http.routers.oucala.entrypoints: "https"
        traefik.http.routers.oucala.rule: "Host(`app.${APP_ENV}.oucala.org`)"
        #traefik.http.routers.oucala.service: "api@internal"
        traefik.http.routers.oucala.tls.certresolver: "letsEncrypt"
        traefik.http.routers.oucala.tls.options: "modern@file"
        traefik.http.routers.oucala.tls: "true"
        traefik.http.services.oucala.loadbalancer.server.port: 3000
        traefik.http.services.oucala.loadbalancer.sticky.cookie.httpOnly: "true"
        traefik.http.services.oucala.loadbalancer.sticky.cookie.secure: "true"

networks:
  traefik-net:
    driver: overlay
    external: true

